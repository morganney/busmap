services:
  db:
    build:
      context: .
      target: postgres
    container_name: db
    environment:
      POSTGRES_PASSWORD: ${BM_POSTGRES_PASSWORD:?err}
      POSTGRES_USER: ${BM_POSTGRES_USER:?err}
      POSTGRES_DB: ${BM_POSTGRES_DB:?err}
      SSO_GOOG_CLIENT_ID: ${SSO_GOOG_CLIENT_ID:?err}
      SSO_GOOG_CLIENT_SECRET: ${SSO_GOOG_CLIENT_SECRET:?err}
    volumes:
      - db:/var/lib/postgresql/data
  session:
    build:
      context: .
      target: redis
    container_name: session
    volumes:
      - session:/data
  api:
    depends_on:
      - db
      - session
    init: true
    user: node
    build:
      context: .
      target: busmap
      args:
        VITE_GOOG_CLIENT_ID: ${SSO_GOOG_CLIENT_ID:?err}
    container_name: api
    env_file: ./packages/api/.env
    command:
      - node
      - packages/api/dist/index.js
  stage:
    depends_on:
      - api
    build:
      context: .
      target: web
      args:
        HOST_NAME: ${HOST_NAME:?err}
        VITE_GOOG_CLIENT_ID: ${SSO_GOOG_CLIENT_ID:?err}
    container_name: stage
    ports:
      - '80:80'
      - '443:443'
    environment:
      SERVER_NAME: ${SERVER_NAME:?err}
      HOST_NAME: ${HOST_NAME:?err}
      UPSTREAM_API_HOST: ${UPSTREAM_API_HOST:?err}
      SSL_CERT_PATH: ${SSL_CERT_PATH:?err}
      SSL_KEY_PATH: ${SSL_KEY_PATH:?err}
  proxy:
    depends_on:
      - api
    build:
      context: .
      target: proxy
      args:
        VITE_GOOG_CLIENT_ID: ${SSO_GOOG_CLIENT_ID:?err}
    container_name: proxy
    ports:
      - '80:80'
    environment:
      UPSTREAM_API_HOST: ${UPSTREAM_API_HOST:?err}

volumes:
  db:
  session:

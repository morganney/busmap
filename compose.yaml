services:
  db:
    build:
      context: .
      target: postgres
    container_name: db
    environment:
      POSTGRES_PASSWORD: ${BM_POSTGRES_PASSWORD:?err}
      POSTGRES_USER: ${BM_POSTGRES_USER:?err}
      POSTGRES_DB: ${BM_POSTGRES_DB:?err}
      SSO_GOOG_CLIENT_ID: ${SSO_GOOG_CLIENT_ID:?err}
      SSO_GOOG_CLIENT_SECRET: ${SSO_GOOG_CLIENT_SECRET:?err}
    volumes:
      - db:/var/lib/postgresql/data
  session:
    build:
      context: .
      target: redis
    container_name: session
    volumes:
      - session:/data
  api:
    depends_on:
      - db
      - session
    build:
      context: .
      target: busmap
    container_name: api
    volumes:
      - .:/app
      - hoisted_node_modules:/app/node_modules
      - common_node_modules:/app/packages/common/node_modules
      - api_node_modules:/app/packages/api/node_modules
    env_file: ./packages/api/.env
    command:
      - npm
      - run
      - start
      - -w
      - api
  stage:
    depends_on:
      - api
    build:
      context: .
      target: stage
      args:
        HOST_NAME: ${HOST_NAME}
    container_name: stage
    ports:
      - "80:80"
      - "443:443"
    environment:
      SERVER_NAME: ${SERVER_NAME}
      HOST_NAME: ${HOST_NAME}
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      SSL_KEY_PATH: ${SSL_KEY_PATH}

volumes:
  db:
  session:
  hoisted_node_modules:
  api_node_modules:
  common_node_modules:

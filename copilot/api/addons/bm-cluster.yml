Parameters:
  App:
    Type: String
    Description: Your application's name.
  Env:
    Type: String
    Description: The environment name your service, job, or workflow is being deployed to.
  Name:
    Type: String
    Description: Your workload's name.
  # Customize your Aurora Serverless cluster by setting the default value of the following parameters.
  bmclusterDBName:
    Type: String
    Description: The name of the initial database to be created in the DB cluster.
    Default: busmap
    # Cannot have special characters
    # Naming constraints: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints
  bmclusterDBAutoPauseSeconds:
    Type: Number
    Description: The duration in seconds before the cluster pauses.
    Default: 1000
Mappings:
  bmclusterEnvScalingConfigurationMap:
    test:
      'DBMinCapacity': 2 # AllowedValues: [2, 4, 8, 16, 32, 64, 192, 384]
      'DBMaxCapacity': 2 # AllowedValues: [2, 4, 8, 16, 32, 64, 192, 384]

    All:
      'DBMinCapacity': 2 # AllowedValues: [2, 4, 8, 16, 32, 64, 192, 384]
      'DBMaxCapacity': 2 # AllowedValues: [2, 4, 8, 16, 32, 64, 192, 384]

Resources:
  bmclusterDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Group of Copilot private subnets for Aurora cluster.
      SubnetIds: !Split [',', { 'Fn::ImportValue': !Sub '${App}-${Env}-PrivateSubnets' }]
  bmclusterSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for your workload to access the DB cluster bmcluster'
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub 'The Security Group for ${Name} to access DB cluster bmcluster.'
      VpcId:
        Fn::ImportValue: !Sub '${App}-${Env}-VpcId'
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-${Name}-Aurora'
  bmclusterDBClusterSecurityGroup:
    Metadata:
      'aws:copilot:description': 'A security group for your DB cluster bmcluster'
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: The Security Group for the database cluster.
      SecurityGroupIngress:
        - ToPort: 5432
          FromPort: 5432
          IpProtocol: tcp
          Description: !Sub 'From the Aurora Security Group of the workload ${Name}.'
          SourceSecurityGroupId: !Ref bmclusterSecurityGroup
      VpcId:
        Fn::ImportValue: !Sub '${App}-${Env}-VpcId'
      Tags:
        - Key: Name
          Value: !Sub 'copilot-${App}-${Env}-${Name}-Aurora'
  bmclusterAuroraSecret:
    Metadata:
      'aws:copilot:description': 'A Secrets Manager secret to store your DB credentials'
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: !Sub Aurora main user secret for ${AWS::StackName}
      GenerateSecretString:
        SecretStringTemplate: '{"username": "postgres"}'
        GenerateStringKey: 'password'
        ExcludePunctuation: true
        IncludeSpace: false
        PasswordLength: 16
  bmclusterDBClusterParameterGroup:
    Metadata:
      'aws:copilot:description': 'A DB parameter group for engine configuration values'
    Type: 'AWS::RDS::DBClusterParameterGroup'
    Properties:
      Description: !Ref 'AWS::StackName'
      Family: 'aurora-postgresql13'
      Parameters:
        client_encoding: 'UTF8'
  bmclusterDBCluster:
    Metadata:
      'aws:copilot:description': 'The bmcluster Aurora Serverless database cluster'
    Type: 'AWS::RDS::DBCluster'
    Properties:
      MasterUsername:
        !Join [
          '',
          [
            '{{resolve:secretsmanager:',
            !Ref bmclusterAuroraSecret,
            ':SecretString:username}}'
          ]
        ]
      MasterUserPassword:
        !Join [
          '',
          [
            '{{resolve:secretsmanager:',
            !Ref bmclusterAuroraSecret,
            ':SecretString:password}}'
          ]
        ]
      DatabaseName: !Ref bmclusterDBName
      Engine: 'aurora-postgresql'
      EngineVersion: '13.9' # LTS versions of PostgreSQL for Aurora Serverless v1 are v13.9 and v11.9
      EngineMode: serverless
      DBClusterParameterGroupName: !Ref bmclusterDBClusterParameterGroup
      DBSubnetGroupName: !Ref bmclusterDBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref bmclusterDBClusterSecurityGroup
      ScalingConfiguration:
        AutoPause: true
        # Replace "All" below with "!Ref Env" to set different autoscaling limits per environment.
        MinCapacity:
          !FindInMap [bmclusterEnvScalingConfigurationMap, !Ref Env, DBMinCapacity]
        MaxCapacity:
          !FindInMap [bmclusterEnvScalingConfigurationMap, !Ref Env, DBMaxCapacity]
        SecondsUntilAutoPause: !Ref bmclusterDBAutoPauseSeconds
  bmclusterSecretAuroraClusterAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref bmclusterAuroraSecret
      TargetId: !Ref bmclusterDBCluster
      TargetType: AWS::RDS::DBCluster
Outputs:
  bmclusterSecret: # injected as BMCLUSTER_SECRET environment variable by Copilot.
    Description: "The JSON secret that holds the database username and password. Fields are 'host', 'port', 'dbname', 'username', 'password', 'dbClusterIdentifier' and 'engine'"
    Value: !Ref bmclusterAuroraSecret
  bmclusterSecurityGroup:
    Description: 'The security group to attach to the workload.'
    Value: !Ref bmclusterSecurityGroup
